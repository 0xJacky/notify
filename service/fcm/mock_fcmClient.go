// Code generated by mockery v2.12.2. DO NOT EDIT.

package fcm

import (
	fcm "github.com/appleboy/go-fcm"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// mockFCMClient is an autogenerated mock type for the mockFCMClient type
type mockFCMClient struct {
	mock.Mock
}

// SendWithRetry provides a mock function with given fields: _a0, _a1
func (_m *mockFCMClient) SendWithRetry(_a0 *fcm.Message, _a1 int) (*fcm.Response, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *fcm.Response
	if rf, ok := ret.Get(0).(func(*fcm.Message, int) *fcm.Response); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*fcm.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*fcm.Message, int) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// newMockFCMClient creates a new instance of mockFCMClient. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func newMockFCMClient(t testing.TB) *mockFCMClient {
	mock := &mockFCMClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.12.3. DO NOT EDIT.

package lark

import "github.com/stretchr/testify/mock"

// Sender is an autogenerated mock type for the sender type
type Sender struct {
	mock.Mock
}

// Send provides a mock function with given fields: subject, message
func (_m *Sender) Send(subject string, message string) error {
	ret := _m.Called(subject, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(subject, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewSenderT interface {
	mock.TestingT
	Cleanup(func())
}

// NewSender creates a new instance of Sender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSender(t NewSenderT) *Sender {
	mock := &Sender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
